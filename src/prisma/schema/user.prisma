enum AccessType {
  ADMIN
  USER
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique
  password    String
  name        String
  access_type AccessType @default(USER)
  roles       UserRole[] @relation("UserRoles")
  employee    Employee?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// ----------------------------------------------------------------------

model UserRole {
  id          String               @id @default(uuid())
  name        String               @unique
  description String?
  permissions UserRolePermission[]
  users       User[]               @relation("UserRoles")
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

// ----------------------------------------------------------------------

enum PermissionName {
  USER
  EMPLOYEE
}

enum PermissionAction {
  CREATE
  READ
  UPDATE
  DELETE
}

model UserRolePermission {
  id        String             @id @default(uuid())
  name      PermissionName
  actions   PermissionAction[] @default([])
  roleId    String
  role      UserRole           @relation(fields: [roleId], references: [id], onDelete: Cascade)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt

  @@unique([roleId, name])
}
