enum AccessType {
  ADMIN
  USER
}

model User {
  id         String         @id @default(uuid())
  email      String         @unique
  password   String
  name       String
  accessType AccessType     @default(USER)
  roles      UserRole[]     @relation("UserRoles")
  employee   Employee?
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  comments   BlogComment[]
  reactions  BlogReaction[]
  assets     Asset[]
}

// ----------------------------------------------------------------------

model UserRole {
  id          String               @id @default(uuid())
  name        String               @unique
  description String?
  permissions UserRolePermission[]
  users       User[]               @relation("UserRoles")
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

// ----------------------------------------------------------------------

enum PermissionName {
  USER
  EMPLOYEE
}

enum PermissionAction {
  CREATE
  READ
  UPDATE
  DELETE
  PUBLISH
  UNPUBLISH
}

model UserRolePermission {
  id        String             @id @default(uuid())
  name      PermissionName
  actions   PermissionAction[] @default([])
  roleId    String
  role      UserRole           @relation(fields: [roleId], references: [id], onDelete: Cascade)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt

  @@unique([roleId, name])
}
